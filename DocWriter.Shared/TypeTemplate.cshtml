@model DocType
<html>
<head>
  <meta http-equiv="X-UA-Compatible" content="IE=edge" /> 
  <script type="text/javascript">@{WriteLiteral (EmbeddedResourceReader.Get ("jquery.min.js"));}</script>
  <script type="text/javascript">@{WriteLiteral (EmbeddedResourceReader.Get ("editor.js"));}</script>
  <style>@{WriteLiteral (EmbeddedResourceReader.Get ("style.css"));}</style>
</head>
<body>
  <div class="caption">@Model.Name</div>
  <div class="title">Summary:<span id="summary-status"></span></div>
  <div class='edit' id='summary' contenteditable='true'>@{WriteLiteral (Model.SummaryHtml);}</div>
  @if (Model.Params.Count () > 0){
    <div class="title">Parameters:</div>
  	foreach (var p in Model.Params){ 
  	   var name = p.Attribute ("name").Value; var paramid = "param-" + name;
  	   <div class="parameter-name">@name<span id="@paramid-status"></span></div>
  	   <div class="edit parameter-doc" contenteditable='true' id="@paramid">@{WriteLiteral (Model.ToHtml (p));}</div>
  	}
  }
  <div class="title">Remarks:<span id="remarks-status"></span></div>
  <div class="edit" id='remarks' contenteditable='true'>@{WriteLiteral (Model.RemarksHtml);}</div>
  <div class='caption'>Members</div>
  @for (int n = 0; n < Model.NodeCount; n++){
  	<div class="title title-code">@Model[n].SignatureHtml<span id="summary-@n-status"></span></div>
  	<div class="edit" id="summary-@n" contenteditable='true'>@{WriteLiteral (Model [n].SummaryHtml);}</div>
  }


</body>
</html>